[core]
	autocrlf = input
	excludesfile = /Users/joe.ta/.gitignore_global
	editor = vim
	eol = lf
[user]
	name = Joe Ta
	email = joe.ta@pepperstone.com
[pull]
	rebase = false
[credential]
	helper = cache
	helper = 
	helper = /usr/local/share/gcm-core/git-credential-manager
[alias]
	fp = pull --rebase --autostash
	fastpull = pull --rebase --autostash
	unchanged = update-index --assume-unchanged
	fastlog = log --oneline --graph
	fast-reset-soft = reset --soft HEAD~1
	mark-unchange = "update-index --assume-unchanged "
	mark-change = "update-index --no-assume-unchanged "
	fastpush = "!git push -f origin $(git rev-parse --abbrev-ref HEAD)"
	quick-squash = "!f() { branch=${1:-master}; git reset --soft $(git merge-base $branch HEAD) && git commit --edit --message=\"${2:-Quick squash}\"; }; f"
	a = "!git status --short | peco | awk '{print $2}' | xargs git add"
	d = diff
	l = log --oneline
	co = checkout
	ci = commit
	cm = commit -m 
	ca = commit --am
	cp = cherry-pick 
	cpc = cherry-pick --continue
	cpa = cherry-pick --abort
	ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
	psf = "!git push -f origin $(git rev-parse --abbrev-ref HEAD)"
	pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
	st = status
	br = branch
	ba = branch -a
	bd = branch -D
	bm = branch --merged
	bn = branch --no-merged
	df = "!git hist | peco | awk '{print $2}' | xargs -I {} git diff {}^ {}"
	hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
	llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
	open = "!hub browse"
	type = cat-file -t
	dump = cat-file -p
	find = "!f() { git log --pretty=format:\"%h %cd [%cn] %s%d\" --date=relative -S'pretty' -S\"$@\" | peco | awk '{print $1}' | xargs -I {} git diff {}^ {}; }; f"
	# edit conflicted file on merge
	edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
	# add conflicted file on merge
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  cobd = "!f() { \
    branch_name=$1; \
    current_branch=$(git symbolic-ref --short HEAD); \
    if git rev-parse --verify $branch_name >/dev/null 2>&1; then \
      git branch -D $branch_name; \
    fi; \
    git checkout -b $branch_name $current_branch; \
  }; f"
[credential "https://dev.azure.com"]
	useHttpPath = true
